<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.net.hlk.data.mapper.UserMapper">
	<!--表名 -->
	<sql id="tableName">
		t_user
	</sql>
	<!-- 字段 -->
	<sql id="field">
		uid,
		department,
		name,
		photo,
		id_card,
		password,
		contact,
		state,
		createuser,
		createtime,
		updateuser,
		updatetime,
		visiable,
		job_type,
		user_message,
		username,
		system_id
 	</sql>

	<!--列表展示数据-->
	<sql id="fields">
		uid,
		department,
		name,
		photo,
		id_card,
		contact,
		state,
		createuser,
		createtime,
		updateuser,
		updatetime,
		job_type,
		user_message,
		user_message ->> 'email' as email,
		username,
		system_id
 	</sql>

	<!-- 关联查询字段 -->
	<sql id="fieldd">
		u.uid,
		u.department,
		u.name,
		u.photo,
		u.id_card,
		u.password,
		u.contact,
		u.state,
		u.createuser,
		u.createtime,
		u.updateuser,
		u.updatetime,
		u.visiable,
		u.job_type,
		u.user_message,
		u.user_message ->> 'email' as email,
		u.username,
		u.system_id
	</sql>

	<!-- 添加字段 -->
	<sql id="insertfield">
 		uid,
		department,
		name,
		photo,
		id_card,
		password,
		contact,
		state,
		createuser,
		createtime,
		updateuser,
		updatetime,
		visiable,
		job_type,
		user_message,
		username,
		system_id,
		check_code
 	</sql>

	<sql id="insertvalue">
		#{uid},
		#{department},
		#{name},
		#{photo},
		#{id_card},
		#{password},
		#{contact},
		#{state}::integer,
		#{updateuser},
		now(),
		#{updateuser},
		now(),
		1,
		#{job_type},
		#{user_message}::jsonb,
		#{username},
		#{system_id},
		#{check_code}::jsonb
	</sql>

	<!-- 用户添加 -->
	<insert id="addUser" parameterType="pd">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="insertfield"></include>
		) values (
		<include refid="insertvalue"></include>
		)
	</insert>

	<!-- 用户修改  -->
	<update id="editUser" parameterType="pd">
		update
		<include refid="tableName"></include>
		<set>
			<if test="department != null and department != '' ">
				department=#{department},
			</if>
			<if test="name != null and name != '' ">
				name=#{name},
			</if>
			<if test="photo != null and photo != '' ">
				photo=#{photo},
			</if>
			<if test="id_card != null and id_card != '' ">
				id_card=#{id_card},
			</if>
			<if test="password != null and password != '' ">
				password=#{password},
			</if>
			<if test="contact != null and contact != '' ">
				contact=#{contact},
			</if>
			<if test="state != null ">
				state=#{state}::integer,
			</if>
			<if test="job_type != null and job_type != '' ">
				job_type=#{job_type},
			</if>
			<if test="username != null and username != '' ">
				username=#{username},
			</if>
			<if test="user_message != null ">
				user_message=#{user_message}::jsonb,
			</if>
			<if test="updateuser != null and updateuser != '' ">
				updateuser=#{updateuser},
			</if>
			updatetime=now(),
			<if test="visiable != null">
				visiable=#{visiable}::integer,
			</if>
		</set>
		where uid = #{uid}
	</update>


	<!-- 用户条件查询 -->
	<select id="findAllUserPgListPage" parameterType="page" resultType="pd">
		SELECT
		row_number() over (ORDER BY updatetime DESC) as xh,
		(SELECT to_char(updatetime,'YYYY-MM-DD HH24:MI:SS') AS nupdatetime
		from t_news where writerid = u.uid LIMIT 1) as nupdatetime,
		<include refid="fieldd"></include>
		<if test="pd.job_type !=null and pd.job_type != '' ">
			,
			(select array_to_json(array_agg(row_to_json(t)))
			from
			(select title from t_news de where uid = de.writerid and visiable = 1) t
			) news
		</if>
		from <include refid="tableName"></include> as u
		where 1=1
		<!-- 所属机构 -->
		<if test="pd.department !=null and pd.department != '' ">
			and u.department like CONCAT(CONCAT('%',#{pd.department}),'%')
		</if>
		<!-- 姓名-->
		<if test="pd.name !=null and pd.name != '' ">
			and u.name like CONCAT(CONCAT('%',#{pd.name}),'%')
		</if>
		<!-- 系统id-->
		<if test="pd.system_id !=null and pd.system_id != '' ">
			and u.system_id = #{pd.system_id}
		</if>
		<!-- 用户身份-->
		<if test="pd.job_type !=null and pd.job_type != '' ">
			and u.job_type = #{pd.job_type}
		</if>
		<!-- 状态-->
		<if test="pd.state !=null ">
			and u.state  = #{pd.state}
		</if>

		<!-- 热度  -->
		<if test="pd.hot !=null and pd.hot != '' ">
			and u.user_message ->>'hot' = #{pd.hot}::varchar
		</if>

		<!-- 单位性质  -->
		<if test="pd.enterprise_type !=null and pd.enterprise_type != '' ">
			and u.user_message ->>'enterprise_type' = #{pd.enterprise_type}::varchar
		</if>

		<if test="pd.beginTime!=null and pd.beginTime!=''"><!-- 开始时间检索 -->
			and u.createtime &gt;= concat(#{pd.beginTime},' 00:00:00')::TIMESTAMP
		</if>
		<if test="pd.endTime!=null and pd.endTime!=''"><!-- 结束时间检索 -->
			and u.createtime &lt;= concat(#{pd.endTime},' 23:59:59')::TIMESTAMP
		</if>
		and u.visiable = 1
	</select>

	<!-- 根据用户id 获取用户信息 -->
	<select id="findById"  resultType="pd" parameterType="pd">
		SELECT
		<include refid="fields"></include>
		from <include refid="tableName"></include>
		where 1=1
		and visiable = 1
		and uid = #{uid}
	</select>

	<!-- 根据用户id 获取用户其他信息 -->
	<select id="getuserOtherMessage"  resultType="pd" parameterType="java.lang.String">
		SELECT
		user_message ->> 'email',user_message
		from <include refid="tableName"></include>
		where 1=1
		and visiable = 1
		and uid = #{uid}
	</select>

	<!--验证是否允许删除-->
	<select id="yanzheng"  resultType="java.lang.Integer" parameterType="pd">
		SELECT count(0) from t_news_operation
		where post_id in (
		SELECT post_id from t_post where xid in
		(SELECT xid from t_news
		where uid = #{uid}))
	</select>

</mapper>